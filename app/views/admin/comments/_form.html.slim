- url ||= nil

.row
  .col-xs-12
    h6.uppercase #{Comment.model_name.human(count: 2)} (#{@task.comments.count})

    - task.comments.includes(:user).order('created_at ASC').each do |comment|
        .comments
          small.hint
            = l(comment.updated_at, format: "Le %d/%M/%Y Ã  %H:%M")
            |  par #{comment.user.try(:fullname)}
          span.right
            - unless comment.deleted?
              = link_to edit_admin_comment_path(comment, url: url) do
                i class="ui icon small blue-text text-darken-4 edit "


              = link_to admin_comment_path(comment, url: url), method: :delete do
                i class="ui icon small trash critical-color"
          br
          - if comment.deleted?
            span.hint
              | #{t('words.comment_was_deleted')}
          - else
            small
              = text_with_links(comment.text)


/ ADD NEW COMMENT
.row
  .col-xs-12
    br
    br
    span.hint.uppercase = t('actions.add_comment')
    .infos
      span.hint = t('words.comment_hint')

      = f.simple_fields_for :comments, task.comments.build do |form|
        = form.input :text, wrapper_html: { class: 'col-xs-12' }, input_html: { class: 'little-textarea'}
        = form.input :user_id, wrapper_html: { class: 'col-xs-12 hide' }, input_html: { value: current_user.id }
        = form.input :task_id, wrapper_html: { class: 'col-xs-12 hide' }, input_html: { value: task.id }
      - if url
        = text_field_tag :url, url, class: "hide"
      br
      = f.submit t('actions.add_comment'), class: "ui button btn-small teal"

- task ||= @task
- project_id ||= @task.project_id || params[:project_id]
- url ||= edit_admin_task_path(@task)

br

= simple_form_for [:admin, task], html: { id: "form-#{project_id}" } do |f|
  div class="row"
    div class="col s6"
      - if project_id
        = f.input :project_id, as: :select, collection: current_user.projects.pluck(:name, :id),
        selected: project_id,
        wrapper_html: { class: 'l12' }, input_html: { id: 'task_project_id' }
      - else
        = f.input :project_id, as: :select, collection: current_user.projects.pluck(:name, :id),
        wrapper_html: { class: 'l12' }, input_html: { id: 'task_project_id' }


      = f.input :name, wrapper_html: { class: 'l12' }
      = f.input :description, wrapper_html: { class: 'l12' }
      - if !task.new_record? && !task.description.blank? && (task.description.chars.count > 89 || "\n".in?(task.description) )

        div class="right open-description"
          i class="material material-icons" add

      - if task.new_record?
        = f.input :do_now, as: :boolean, checked_value: true, unchecked_value: false

    div class="col s6"
      div class="col l12 infos"
        = f.input :priority, as: :select, collection: priority_field, selected: task.new_record? ? [t('words.medium'),'medium'] : task.priority, wrapper_html: { class: 'l12' }

        = f.input :user_ids, as: :check_boxes, collection: task_user_ids_field(Project.where(id: project_id).first),
          wrapper_html: { class: 'l12' }

        = text_field_tag :url, url, class: "hide"

        = f.input :category_id, as: :select, collection: task_category_field(project_id), include_blank: true,
          selected: task.try(:category_id),
          wrapper_html: { class: 'l12' }
        div class='input-field col l12'
          label Nouvelle cat√©gorie
          = text_field_tag :new_category_name

      div class="col l12"
        - unless task.new_record?
          = f.input :done, wrapper_html: { class: "btn col l12  #{task.done? ? ' blue-grey lighten-5 black-text' : 'blue darken-3  white-text'}" }, label_html: { class: "#{task.done? ? ' blue-grey-text text-darken-3' : 'white-text'}"}
        br
        = f.submit t('actions.save'), class: "btn"


br

/ COMMENTS
- unless task.new_record?
  = simple_form_for [:admin, task], html: { id: "form-#{project_id}" } do |f|
    = render partial: "admin/comments/form", locals: { task: task, f: f, url: url}
